Yait 0.1.0
==========

- relationships between issues : parent/child, blocks/requires

  - make special forms that are submitted through AJAX.

- project configuration: ability to hide parent/child relationship for
  projects/users that don't want the feature.

- date handling:

  - fix date display: detecting the timezone and adjusting to DST in
    JavaScript is hard (to me). Do it server-side. This will also make
    it easier to i18n-ize messages that contain dates.

    Look at http://momentjs.com

  - when a user sets a deadline, she uses her own local time. Make
    sure that the right time in stored in the database. To do so, we
    could store the timezone in a hidden field (with the 'jstz'
    Javascript package) and compute the UTC time server-side.

- review permission system: turn it into a Pyramid authorization
  policy (?)

- attachments

- project configuration : configure whether the public
  (customer-oriented) timing information is displayed ('time_billed'
  and 'time_spent_public').

- add a way to configure a project so that "time spent (real)" is
  required. In this case, display the field below the text field (and
  not in the "extra" field set).

- search

- e-mail notification:

  1. Issue added:

    - the reporter is subscribed;

    - send notification to the reporter and the list of automatically
      notified users (configured per project).

  2. Issue updated: send notification to the list of subscribers.

  3. Subscriber added: send notification to the list of subscribers
     and the new subscriber (same as #2 above)

  IssueSubscription: issue_id, user_id

  ProjectSubscription: project_id, user_id

  deferred tasks: look at retools, RQ (http://python-rq.org) versus Celery

- i18n (and update Trove classifier in 'setup.py'), including i18n of
  jQuery date picker (cf. http://www.kelvinluck.com/assets/jquery/datePicker/v2/demo/) and date displayed in the 'meta' block

- sanitize user input comments (remove iframe, Javascript, etc.) :
  https://github.com/jsocol/bleach ? https://github.com/wichert/htmllaundry ?

  http://ha.ckers.org/xss.html

- anti-CSRF measures:
  http://wtforms.simplecodes.com/docs/dev/ext.html#module-wtforms.ext.csrf

- make priority and kind fields configurable (like statuses).

- add 'milestone' field. Should be configurable like statuses,
  priorities and others. The field should not be required, though.
  Also, if there are no milestones, the field should not appear at
  all.


Later
=====

- missing CSS for '.unassigned-issue' (in 'issue.pt')

- add the possibility for users to create their own filters, which may
  be private or public. Filters may be available for a particular
  project or for all projects:

  - filter_id
  - user_id
  - label: text label
  - public: True if public, False if private
  - project_id: may be NULL if available in all projects.
  - definition: 'definition' column could be a pickled dictionary.

  Warning here: If a filter is public and available in all projects,
  we should make sure that it does not leak any information about its
  creator in foreign projects that the creator does not know about. In
  fact, I wonder if this feature is a good idea. Perhaps we could just
  let the user copy one of its filter from a project to another, and
  decide that a public filter is only usable in its project of origin.

- check CASCADE ON DELETE between issues, projects, roles, etc.

- add syntax highlighting in reStructuredText markup.

- add auto-complete widget for "assign issue to"

- experiment with CodeMirror (http://codemirror.net/)

- ability to guess links to issues in comments, for example::

      See issue #123 and issue #project-something:123. This is our
      priority ##1.

- ability to deactivate a user: such a user will not be able to login
  anymore, be assigned an issue nor receive any e-mail
  notifications. Perhaps we could store an history pickle in a
  separate table that logs account creation, deactivation and
  reactivation.

- add other text renderers (Markdown, at least):

- make the renderer configurable in the preferences (set in a cookie);

- handle requests to "/robots.txt" (and possibly "/favicon.ico"
  if/when the layout template is not used)

- document time-related details:

  - estimated time (internal): the time you think you are going to
    spend on this issue. This value is private and is not shown to the
    customer;

  - time billed: the time the customer is going to be billed. It may
    be equal to the estimated time, but could as well be less or more,
    depending on the context;

  - time spent (real): the time you have really spent on this issue;

  - time spent (public): the time spent on this issue as it should be
    seen by the customer. It may be different than the time really
    spent, and relates to the time billed.

  - try to make it more clear in the UI itself that "estimated time"
    and "time billed" fields correspond to a total (that will replace
    previous values), while "time spent" (private and public) will be
    added (or possibly removed) to the total time already spent on
    this issue.

- validate HTML, CSS and Javascript (jslint).

- add a way to delete an issue. Actually, it should not remove
  anything. It toggles the "deleted" marker in the Issue model and add
  a change. The view page then indicates that this issue has been
  deleted, the author of the deletion and the date. Only project
  administrators are allowed to undelete an issue (which also adds a
  "Change" entry).

- user preferences:

  - text renderer;

  - preferred language;

- optimize database

- better error handling (404 & 500)

- time reporting graphics

- give credit:

  - icons: Tango (http://tango.freedesktop.org/), etc. (?)

  - date component from the jQuery Methods (https://github.com/vitch/jquery-methods)

  - jQuery date picker (http://www.kelvinluck.com/assets/jquery/datePicker/v2/demo/)

  - dropdown menu from Bootstrap

  - calendar icon: Fam fam fam

  - JavaScript timezone (may be removed): http://www.pageloom.com/automatic-timezone-detection-with-javascript

  - jQuery drag and drop plugin: http://dragsort.codeplex.com/

- remove unused assets from "static/img" (if any)

- when the text renderer gives an error, refuse to save the issue/comment;

- when the text renderer gives an error, show error outside of the
  text container.

- add favicon

- add tags (see http://ivaynberg.github.com/select2/)

- show priority and deadline in different colors: orange if imminent,
  red if past.

- add settings so that the JSON calls are not cached:
  http://stackoverflow.com/questions/264216/getjson-returning-cached-data-in-ie8

  Is this needed at all? Do we have JSON calls that are not POSTed?

- user guide

- automatically grow textareas: http://www.technoreply.com/autogrow-textarea-plugin-version-2-0/

- handle localization of timing information: "1j" in French should be
  accepted and turned into "1d" in English.

- look at ForgePlucker (http://home.gna.org/forgeplucker/) and/or
  other formats to export bugs to other systems.

- insert into users values(1, 'admin', '$2a$10$xU8/vh3drmwoCGUN.zcE.OYM54sKu0SbzOXXpOeosgNi2lCLMoLae', 'Joe Admin', 'joe.admin@exemple.com', 1);

- provide a WYSIWYG HTML editor in addition to markup renderers. See
  for example: http://xing.github.com/wysihtml5/
